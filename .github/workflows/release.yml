name: Rust Windows Build
on:
  push:
    paths-ignore:
      - ".vscode/**"
      - 'README.md'
    branches:
      - main
  pull_request:
    branches:
      - main
#
env:
  RUST_BACKTRACE: full
  CARGO_TERM_COLOR: always
#
defaults:
  run:
    shell: bash
#
jobs:
  build-test-windows:
    name: Build and Test on Windows
    runs-on: windows-latest
    #
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      #
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          target: x86_64-pc-windows-msvc
          default: true
      #
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}
      #
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      #
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
      #
      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check
      #
      - name: Run lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -W clippy::pedantic"
      #
      - name: Prepare Artifacts
        run: |
          cd target/release
          echo "ARTIFACT=kill_open_programs.exe" >> $GITHUB_ENV
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT }}
          path: target/release/${{ env.ARTIFACT }}

