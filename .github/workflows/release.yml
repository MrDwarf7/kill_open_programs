name: Rust Windows Build
on:
  push:
    paths-ignore:
      - ".vscode/**"
      - 'README.md'
    branches:
      - main
  pull_request:
    branches:
      - main
#
env:
  RUST_BACKTRACE: full
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
defaults:
  run:
    shell: bash
#
jobs:
  build-windows:
    name: Build and Release
    runs-on: windows-latest
    #
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      #
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy
          target: x86_64-pc-windows-msvc
          default: true
      #
      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: windows-cargo-${{ hashFiles('**/Cargo.lock') }}
      #
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      #
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          run: |
            cd target/release
            echo "ARTIFACT=$(ls | grep .exe)" >> $GITHUB_ENV
          files: target/release/${{ env.ARTIFACT }}
          prerelease: false
          draft: true
          name: ${{ env.ARTIFACT }}_${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true
          make_latest: true

